name: Mac OS CI

on: [pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env: 
  OSX_GDAL_VERSION: 3.9.0
  GDAL_INSTALL_PATH: /Users/runner/work/gdal
  DYLD_LIBRARY_PATH: /Users/runner/work/gdal/lib:/Users/runner/work/gdal/lib/jni:/Users/runner/work/gdal/share/java:/opt/homebrew/lib:/usr/lib
  CMAKE_OPTIONS: -DCFITSIO_ROOT=/opt/homebrew/Cellar/cfitsio  -DPoppler_ROOT=/opt/homebrew/Cellar/poppler -DPROJ_ROOT=/opt/homebrew/Cellar/proj -DSPATIALITE_ROOT=/opt/homebrew/Cellar/libspatialite -DPostgreSQL_ROOT=/opt/homebrew/Cellar/libpq -DEXPAT_ROOT=/opt/homebrew/Cellar/expat -DXercesC_ROOT=/opt/homebrew/Cellar/xerces-c -DSQLite3_ROOT=/opt/homebrew/Cellar/sqlite -DOpenSSL_ROOT=/opt/homebrew/Cellar/openssl -DPNG_ROOT=/opt/homebrew/Cellar/libpng -DJPEG_ROOT=/opt/homebrew/Cellar/jpeg-turbo -DEXPECTED_JPEG_LIB_VERSION=80 -DOpenJPEG_ROOT=/opt/homebrew/Cellar/openjpeg -DCURL_ROOT=/opt/homebrew/Cellar/curl -DGDAL_USE_LIBKML=OFF -DGDAL_USE_ODBC=OFF -DGDAL_USE_ZSTD=OFF -DCMAKE_DISABLE_FIND_PACKAGE_Arrow=ON

jobs:
  build:

    runs-on: [macos-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: 'temurin'
        architecture: 'arm64'
    - name: Build GDAL
      run: |
        mkdir $GDAL_INSTALL_PATH
        brew update
        brew upgrade
        brew install freexl libxml2 libspatialite geos proj libgeotiff openjpeg libaec postgis poppler doxygen unixodbc aom jpeg-xl libheif libarchive libkml boost ccache swig python-setuptools
        : # gdal is automatically installed as a dependency for postgis
        brew uninstall --ignore-dependencies gdal
        wget https://github.com/OSGeo/gdal/releases/download/v$OSX_GDAL_VERSION/gdal-$OSX_GDAL_VERSION.tar.gz
        tar -xvf gdal-$OSX_GDAL_VERSION.tar.gz
        cd gdal-$OSX_GDAL_VERSION
        mkdir build
        cd build
        : # See https://github.com/OSGeo/gdal/issues/6949 (Java bindings) and https://github.com/OSGeo/gdal/pull/8226 (Arrow and Parquet)
        cmake -DCMAKE_INSTALL_PREFIX=$GDAL_INSTALL_PATH -DCMAKE_BUILD_TYPE=Release -DBUILD_JAVA_BINDINGS=ON -DBUILD_PYTHON_BINDINGS=OFF ${CMAKE_OPTIONS} ..  
        cmake --build .
        cmake --build . --target install
        : # Sanity test that the gdal bindings actually work
        ctest --output-on-failure -R java 
    - name: Maven repository caching
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: gt-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          gt-maven-
    - name: Disable network offloading
      # See: https://github.com/actions/virtual-environments/issues/1187#issuecomment-686735760
      run: |
          sudo sysctl -w net.link.generic.system.hwcksum_tx=0
          sudo sysctl -w net.link.generic.system.hwcksum_rx=0
    - name: Build with Maven
      run: |
        mvn -B clean install -T2 -Dall --file pom.xml -Dspotless.apply.skip=true -Dgdal.version=3.2.0
    - name: Remove SNAPSHOT jars from repository
      run: |
        find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}
