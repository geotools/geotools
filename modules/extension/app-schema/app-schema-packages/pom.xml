<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.geotools</groupId>
        <artifactId>app-schema</artifactId>
        <version>17-SNAPSHOT</version>
    </parent>

    <groupId>org.geotools</groupId>
    <artifactId>app-schema-packages</artifactId>
    <packaging>pom</packaging>
    <name>Application Schema Packages</name>


    <description>
        This is an aggregating pom used to build remote schema resources into
        maven artifacts so they can be used in offline GeoTools testing.
        This module should not be part of the standard build.
        Modules below have no parent, by design.

        Once artifacts are built with "mvn clean install", selected
        artifacts can be deployed to the osgeo GeoTools maven repository.
        See the developer manual:
        http://docs.geotools.org/latest/developer/procedures/add.html

        Please be sure to deploy with the provided pom.xml, so that
        dependency information is preserved.

        For example, to deploy cgiutilities-1.0 and geosciml-2.0 (only),
        under Linux, use something like:

            for groupId in cgiutilities-1.0 geosciml-2.0; do
                mvn deploy:deploy-file \
                    -DrepositoryId=osgeo \
                    -Durl=dav:http://download.osgeo.org/webdav/geotools/ \
                    -DpomFile=$groupId/pom.xml \
                    -Dfile=`find $groupId -name "*.jar"`
            done

        If you have trouble building a single child module with Maven 3
        failing to honour local dependencies that were downloaded from
        the osgeo repo, Google for "_maven.repositories", curse the new
        Maven 3 behaviour, and delete every _maven.repositories file in
        ~/.m2/repository/org/geotools/schemas with, for example:

            find ~/.m2/repository/org/geotools/schemas \
                -name _maven.repositories \
                -exec rm -f {} \;

        Then "mvn clean install" should work for a single child module.
    </description>

    <developers>
        <developer>
            <name>Ben Caradoc-Davies</name>
            <id>bencaradocdavies</id>
            <email>Ben.Caradoc-Davies@csiro.au</email>
            <organization>CSIRO Earth Science and Resource Engineering </organization>
            <roles>
                <role>Module Maintainer</role>
                <role>Schema Packager</role>
            </roles>
            <timezone>8</timezone>
        </developer>
    </developers>

    <modules>
        <module>cgiutilities-1.0</module>
        <module>earthresourceml-1.1</module>
        <module>filter-1.1</module>
        <module>filter-2.0</module>
        <module>geosciml-2.0</module>
        <module>geosciml-3.0-seegrid</module>
        <module>gml-3.1</module>
        <module>gml-3.2</module>
        <module>ic-2.0</module>
        <module>iso-19139-2007</module>
        <module>iso-19156-seegrid</module>
        <module>om-1.0</module>
        <module>om-2.0</module>
        <module>ows-1.0</module>
        <module>ows-1.1</module>
        <module>sampling-1.0</module>
        <module>sampling-2.0</module>
        <module>samplingSpecimen-2.0</module>
        <module>sensorML-1.0</module>
        <module>sweCommon-1.0</module>
        <module>sweCommon-1.0-gml32</module>
        <module>wfs-1.1</module>
        <module>wfs-2.0</module>
        <module>xlink-1.0</module>
        <module>xml-1.0</module>
    </modules>

</project>
