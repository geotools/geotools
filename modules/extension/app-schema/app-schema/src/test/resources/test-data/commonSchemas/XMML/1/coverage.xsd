<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
  xmlns:gml="http://www.opengis.net/gml" 
  xmlns:geo="http://www.seegrid.csiro.au/xml/geometry"
  xmlns:swe="http://www.opengis.net/swe/0.0" 
  xmlns:xmml="http://www.opengis.net/xmml" 
  targetNamespace="http://www.opengis.net/xmml" 
  elementFormDefault="qualified" 
  attributeFormDefault="unqualified" 
  version="pre-release">
	<annotation>
		<documentation>coverage.xsd

A GML conformant schema 
for coverages - modified from GML coverages

Copyright (c) 2005 CSIRO - see https://www.seegrid.csiro.au/twiki/bin/view/Xmml/LegalNotices#Software_Notice</documentation>
	</annotation>
	<!-- ====================================================================== -->
	<!-- bring in other schemas -->
	<import namespace="http://www.opengis.net/gml" schemaLocation="http://schemas.opengis.net/gml/3.1.1/base/gml.xsd"/>
	<import namespace="http://www.seegrid.csiro.au/xml/geometry" schemaLocation="../../geo/0.1.0/geo.xsd"/>
	<import namespace="http://www.opengis.net/swe/0.0" schemaLocation="../../sweCommon/1.0.30/swe.xsd"/>

	<!-- ====================================================================== -->
	<complexType name="AbstractCoverageType" abstract="true">
		<annotation>
			<documentation>A coverage is a set of attribute values (its range) associated to position within a bounded space (its domain). 
			This coverage uses a single coverage function to associate an element from the domain with an element from its range.  
			This definition conforms to ISO 19123.  Note that coverage is a GML feature.
			
			The content model for concrete (instantiable) coverages MUST extend AbstractCoverageType with a suitable domain property.</documentation>
		</annotation>
		<complexContent>
			<extension base="gml:AbstractFeatureType">
				<sequence>
					<!--					<element name="domainExtent" type="gml:BoundingShapeType"/> -->
					<element name="rangeDescription" type="swe:SWE_RecordSchemaPropertyType" minOccurs="0"/>
                    <!-- GR: added maxOccurs="unbounded" as the mapping requires it to be multiple valued
                    but the schema is preventing it without setting maxoccurs -->
					<element name="range" type="xmml:RangePropertyType" maxOccurs="unbounded">
						<annotation>
							<documentation>Contains a representation of the values in the coverage</documentation>
						</annotation>
					</element>
					<!--
					<element ref="xmml:domain">
						<annotation>
							<documentation>Concrete coverage types must add a domain element of the appropriate type.</documentation>
						</annotation>
					</element>
					-->
				</sequence>
				<attribute name="dimension" type="positiveInteger" use="optional"/>
			</extension>
		</complexContent>
	</complexType>
	<!-- ...... -->
	<element name="AbstractCoverage" type="xmml:AbstractCoverageType" abstract="true" substitutionGroup="gml:_Feature"/>
	<!-- ...... -->
	<complexType name="CoveragePropertyType">
		<sequence>
			<element ref="xmml:AbstractCoverage" minOccurs="0"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ===========================================================
	<element name="abstractRange" type="anyType" abstract="true"/> -->
	<!-- =========================================================== -->
	<complexType name="RangePropertyType">
		<annotation>
			<documentation>Choice of representations of values in the coverage range. 
			
			In general, the range will describe a property whose representation requires a complex or composite value. 
			The values at sample locations may be described using a record (which may be complex) for each sample location at a time (RecordList) 
			or the range may be decomposed into a set of Band elements, each of which records the values for a single component of a complex value. 
			If the latter method is used, the set of Bands must be captured in a set of Coverages. 
			The fact that these share a common domain may be indicated by use of the GML xlink:href pattern to re-use a single domain description. 
			
			The base type "anyType" is not strictly needed - all concrete types are implicitly "restrictions" of WXS "anyType", but making this explicit appear to make Xerces happier.</documentation>
		</annotation>
		<sequence>
			<choice>
				<element ref="xmml:InterleavedRecord"/>
				<element ref="xmml:ListOfRecords">
					<annotation>
						<documentation>Values in the range represented as record in band-interleaved (property- or component-interleaved) order - i.e. values for all components of range for one sample in domain, followed by values for all components of range for next sample in domain, etc</documentation>
					</annotation>
				</element>
				<element ref="xmml:ListOfBands">
					<annotation>
						<documentation>Values in the range represented as a vector.</documentation>
					</annotation>
				</element>
				<element ref="xmml:File">
					<annotation>
						<documentation>A reference to an external source for the data, together with a description of how that external source is structured</documentation>
					</annotation>
				</element>
			</choice>
		</sequence>
	</complexType>
	<!-- =========================================================== -->
	<!-- === Types used in range content choices === -->
	<!-- =========================================================== -->
	<complexType name="ListOfBandsType">
		<annotation>
			<documentation>A list, representing the values in a scalar-valued range.</documentation>
		</annotation>
		<sequence maxOccurs="unbounded">
			<choice maxOccurs="unbounded">
				<element name="categoryList" type="swe:TypedCategoryListType">
					<annotation>
						<documentation>A list of text values describing a single property, being the set of values in one component of the range.  
						
						HTML character entities may be used to escape embedded whitespace within a list item to prevent interpretation as a list item separator. 
						See http://www.w3.org/TR/REC-html40/sgml/entities.html. 
						For example &#xA0; represents a non-breaking space. 
						
						categoryList is normally used for values taken from a controlled vocabulary. 
						For unconstrained text, use descriptionList.</documentation>
					</annotation>
				</element>
				<element name="countList" type="swe:TypedCountListType">
					<annotation>
						<documentation>A list of integers describing a single property, being the set of values in one component of the range.</documentation>
					</annotation>
				</element>
				<element name="measureList" type="swe:TypedMeasureListType">
					<annotation>
						<documentation>A list of numeric values describing a single property, being the set of values in one component of the range.</documentation>
					</annotation>
				</element>
				<element name="referenceList" type="swe:refList">
					<annotation>
						<documentation>A list of URI's, being the a set of references to (possibly complex) values in one component of the range.</documentation>
					</annotation>
				</element>
			</choice>
		</sequence>
		<attribute name="bandCount" type="positiveInteger"/>
	</complexType>
	<!-- ...... -->
	<element name="ListOfBands" type="xmml:ListOfBandsType">
		<annotation>
			<documentation>Values in the range represented as a list of vectors.</documentation>
		</annotation>
	</element>
	<!-- =========================================================== -->
	<complexType name="ListOfRecordsType">
		<sequence>
			<element name="record" type="swe:SWE_CompactRecordType" maxOccurs="unbounded"/>
		</sequence>
		<attribute name="recordCount" type="positiveInteger"/>
	</complexType>
	<!-- ...................... -->
	<element name="ListOfRecords" type="xmml:ListOfRecordsType">
		<annotation>
			<documentation>Values in the range represented as record in band-interleaved (property- or component-interleaved) order - i.e. values for all components of range for one sample in domain, followed by values for all components of range for next sample in domain, etc</documentation>
		</annotation>
	</element>
  <!-- =========================================================== -->
  <simpleType name="FileValueModel">
    <annotation>
      <documentation>List of codes that identifies the file structure model for records stored in files.</documentation>
    </annotation>
    <restriction base="token">
      <enumeration value="Record Interleaved"/>
      <enumeration value="Band Sequential"/>
    </restriction>
  </simpleType>

	<complexType name="FileType">
		<sequence>
			<element name="fileName" type="anyURI"/>
			<element name="fileStructure" type="xmml:FileValueModel"/>
			<element name="mimeType" type="anyURI" minOccurs="0"/>
			<element name="compression" type="anyURI" minOccurs="0"/>
			<element name="coverageFunction" type="xmml:CoverageFunctionPropertyType">
				<annotation>
					<documentation>Describes the mapping function between the elements in the domain and the elements in the range. Typically a sequence function.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<!-- ...................... -->
	<element name="File" type="xmml:FileType">
		<annotation>
			<documentation>A reference to an external source for the data, together with a description of how that external source is structured</documentation>
		</annotation>
	</element>
	<!-- =========================================================== -->
	<!-- =========================================================== -->
	<complexType name="CoverageFunctionPropertyType">
		<annotation>
			<documentation>The function or rule which defines the map from members of the domainSet to the range.  
      More functions will be added to this list</documentation>
		</annotation>
		<choice>
			<element ref="xmml:MappingRule"/>
			<element ref="xmml:GridFunction"/>
		</choice>
	</complexType>
	<!-- =========================================================== -->
	<!-- ============= Components for coverageFunctions ================ -->
	<!-- =========================================================== -->
	<element name="MappingRule" type="gml:StringOrRefType">
		<annotation>
			<documentation>Description of a rule for associating members from the domainSet with members of the rangeSet.</documentation>
		</annotation>
	</element>
	<!-- =========================================================== -->
	<element name="GridFunction" type="xmml:GridFunctionType"/>
	<!-- ...... -->
	<complexType name="GridFunctionType">
		<annotation>
			<documentation>Defines how values in the domain are mapped to the range set. The start point and the sequencing rule are specified here.</documentation>
		</annotation>
		<sequence>
			<element name="sequenceRule" type="xmml:SequenceRuleType" minOccurs="0">
				<annotation>
					<documentation>If absent, the implied value is "Linear".</documentation>
				</annotation>
			</element>
			<element name="startPoint" type="gml:integerList" minOccurs="0">
				<annotation>
					<documentation>Index position of the first grid post.  If absent the startPoint is equal to the value of gridEnvelope::low from the grid definition.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<!-- =========================================================== -->
	<simpleType name="SequenceRuleNames">
		<annotation>
			<documentation>List of codes (adopted from ISO 19123 Annex C) that identifies the rule for traversing a grid to correspond with the sequence of members of the rangeSet.</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="Linear"/>
			<enumeration value="Boustrophedonic"/>
			<enumeration value="Cantor-diagonal"/>
			<enumeration value="Spiral"/>
			<enumeration value="Morton"/>
			<enumeration value="Hilbert"/>
		</restriction>
	</simpleType>
	<!-- =========================================================== -->
  <complexType name="SequenceRuleType">
    <simpleContent>
      <extension base="xmml:SequenceRuleNames">
        <attribute name="order" type="xmml:IncrementOrder" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!-- =========================================================== -->
	<simpleType name="IncrementOrder">
		<annotation>
			<documentation>The enumeration value here indicates the incrementation order  to be used on the first 2 axes, i.e. "+x-y" means that the points on the first axis are to be traversed from lowest to highest and  the points on the second axis are to be traversed from highest to lowest. The points on all other axes (if any) beyond the first 2 are assumed to increment from lowest to highest.
XXXXXXXXXXXXXXX need to make this more comprehensive</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="+x+y"/>
			<enumeration value="+y+x"/>
			<enumeration value="+x-y"/>
			<enumeration value="-y-x"/>
		</restriction>
	</simpleType>
	<!-- =========================================================== -->
	<complexType name="IndexMapType">
		<annotation>
			<documentation>Exends GridFunctionType with a lookUpTable.  This contains a list of indexes of members within the rangeSet corresponding with the members of the domainSet.  The domainSet is traversed in list order if it is enumerated explicitly, or in the order specified by a SequenceRule if the domain is an implicit set.    The length of the lookUpTable corresponds with the length of the subset of the domainSet for which the coverage is defined.</documentation>
		</annotation>
		<complexContent>
			<extension base="xmml:GridFunctionType">
				<sequence>
					<element name="lookUpTable" type="gml:integerList"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- ...... -->
	<element name="IndexMap" type="xmml:IndexMapType" substitutionGroup="xmml:GridFunction"/>
	<!-- =========================================================== -->
	<!-- =========================================================== -->
	<!-- ===========================================================
	<element name="abstractDomain" type="anyType" abstract="true">
		<annotation>
			<documentation>The spatiotemporal domain of a coverage.  
  Typically 
  * a geometry collection, 
  * an implicit geometry (e.g. a grid), 
  * an explicit or implicit collection of time instances or periods

N.B. Temporal domains still to be implemented.</documentation>
		</annotation>
	</element> -->
	<!-- =========================================================== -->
	<element name="domain" type="xmml:DomainType"/>
	<!-- ...... -->
	<complexType name="DomainType">
		<annotation>
			<documentation>Generic model for spatiotemporal domain of a coverage.  
  Typically 
  * a geometry collection, 
  * an implicit geometry (e.g. a grid), 
  * an explicit or implicit collection of time instances or periods

N.B. Temporal domains still to be implemented.</documentation>
		</annotation>
		<sequence minOccurs="0">
			<choice>
				<element ref="gml:_Geometry"/>
				<element ref="gml:_TimeObject"/>
			</choice>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ====================================================================== -->
	<element name="Coverage" type="xmml:CoverageType" substitutionGroup="xmml:AbstractCoverage">
		<annotation>
			<documentation>A coverage with a general spatio-temporal domain</documentation>
		</annotation>
	</element>
	<!-- ...... -->
	<complexType name="CoverageType">
		<annotation>
			<documentation>A generic coverage type</documentation>
		</annotation>
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element ref="xmml:domain"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<!-- ====================================================================== -->
	<complexType name="PointSetDomainType">
		<annotation>
			<documentation>Need to add MultiInstant ...</documentation>
		</annotation>
		<sequence minOccurs="0">
			<element ref="gml:MultiPoint"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ====================================================================== -->
	<!-- =========================================================== -->
	<element name="PointSetCoverage" type="xmml:PointSetCoverageType" substitutionGroup="xmml:AbstractCoverage">
		<annotation>
			<documentation>A coverage whose domain is a collection of point locations</documentation>
		</annotation>
	</element>
	<!-- ...... -->
	<complexType name="PointSetCoverageType">
		<annotation>
			<documentation>A discrete coverage type whose domain is defined by a collection of point locations</documentation>
		</annotation>
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element name="pointSetDomain" type="xmml:PointSetDomainType"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<!-- ====================================================================== -->
	<complexType name="IntervalSetDomainType">
		<annotation>
			<documentation>Need to add MultiPeriod ...</documentation>
		</annotation>
		<sequence minOccurs="0">
			<element ref="geo:MultiGInterval"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ====================================================================== -->
	<element name="IntervalSetCoverage" type="xmml:IntervalSetCoverageType" substitutionGroup="xmml:AbstractCoverage">
		<annotation>
			<documentation>A coverage whose domain is a collection of envelopes or intervals</documentation>
		</annotation>
	</element>
	<!-- ...... -->
	<complexType name="IntervalSetCoverageType">
		<annotation>
			<documentation>A discrete coverage type whose domain is defined by a collection of intervals</documentation>
		</annotation>
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element name="intervalSetDomain" type="xmml:IntervalSetDomainType"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<!-- =========================================================== -->
	<complexType name="RectifiedGridDomainType">
		<annotation>
			<documentation>Need to add TemporalGrid ...</documentation>
		</annotation>
		<sequence minOccurs="0">
			<element ref="gml:RectifiedGrid"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- =========================================================== -->
	<element name="RectifiedGridCoverage" type="xmml:RectifiedGridCoverageType" substitutionGroup="xmml:AbstractCoverage"/>
	<!-- ...... -->
	<complexType name="RectifiedGridCoverageType">
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element name="rectifiedGridDomain" type="xmml:RectifiedGridDomainType"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<!-- =========================================================== -->
	<complexType name="TimeAggregateDomainType">
		<sequence minOccurs="0">
			<element ref="swe:TimeAggregate"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ====================================================================== -->
	<element name="TimeAggregateCoverage" type="xmml:TimeAggregateCoverageType" substitutionGroup="xmml:AbstractCoverage"/>
	<!-- ...... -->
	<complexType name="TimeAggregateCoverageType">
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element name="timeAggregateDomain" type="xmml:TimeAggregateDomainType"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<!-- =========================================================== -->
	<complexType name="TimeGridDomainType">
		<sequence minOccurs="0">
			<element ref="swe:TimeGrid"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ====================================================================== -->
	<element name="TimeGridCoverage" type="xmml:TimeGridCoverageType" substitutionGroup="xmml:AbstractCoverage"/>
	<!-- ...... -->
	<complexType name="TimeGridCoverageType">
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element name="timeGridDomain" type="xmml:TimeGridDomainType"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<!-- ====================================================================== -->
	<complexType name="LogPropertyType">
		<sequence minOccurs="0">
			<choice>
				<element ref="xmml:ContinuousLog"/>
				<element ref="xmml:IntervalLog"/>
				<element ref="xmml:PointLog"/>
				<!-- <element ref="xmml:CurveSurvey"/> -->
			</choice>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
		<attribute name="unionSemantics">
			<annotation>
				<documentation>optional XML attribute implements UML Union discriminator</documentation>
			</annotation>
			<simpleType>
				<restriction base="string">
					<enumeration value="continuousLog"/>
					<enumeration value="intervalLog"/>
					<enumeration value="pointLog"/>
					<!-- <enumeration value="curveSurvey"/> -->
				</restriction>
			</simpleType>
		</attribute>
	</complexType>
	<!-- ====================================================================== -->
	<element name="PointLog" type="xmml:PointSetCoverageType" substitutionGroup="xmml:PointSetCoverage">
		<annotation>
			<documentation>A log over a collection of point locations</documentation>
		</annotation>
	</element>
	<!-- ====================================================================== -->
	<element name="IntervalLog" type="xmml:IntervalSetCoverageType" substitutionGroup="xmml:IntervalSetCoverage">
		<annotation>
			<documentation>A log over a collection of intervals</documentation>
		</annotation>
	</element>
	<!-- ====================================================================== -->
	<element name="ContinuousLog" type="xmml:RectifiedGridCoverageType" substitutionGroup="xmml:RectifiedGridCoverage">
		<annotation>
			<documentation>A log over a collection of regularly spaced locations</documentation>
		</annotation>
	</element>
	<!-- ====================================================================== -->
	<!-- ====================================================================== -->
  <!-- =========================================================== -->
  <complexType name="InterleavedRecordType">
    <sequence>
      <element name="record" type="swe:SWE_CompactRecordType"/>
      <element name="coverageFunction" type="xmml:CoverageFunctionPropertyType">
        <annotation>
          <documentation>Describes the mapping function between the elements in the domain and the elements in the range. Typically a sequence function.</documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="itemCount" type="positiveInteger"/>
  </complexType>
  <!-- ...................... -->
  <element name="InterleavedRecord" type="xmml:InterleavedRecordType">
    <annotation>
      <documentation>Values in the range represented as record in band-interleaved (property- or component-interleaved) order - i.e. values for all components of range for one sample in domain, followed by values for all components of range for next sample in domain, etc</documentation>
    </annotation>
  </element>
  <!-- =========================================================== -->
</schema>
