/*
 *    GeoTools - The Open Source Java GIS Toolkit
 *    http://geotools.org
 *
 *    (C) 2003-2008, Open Source Geospatial Foundation (OSGeo)
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
/*
 * File is generated by 'Unit Tests Generator' developed under
 * 'Web Test Tools' project at http://sf.net/projects/wttools/
 * Copyright (C) 2001 "Artur Hefczyc" <kobit@users.sourceforge.net>
 * to all 'Web Test Tools' subprojects.
 *
 * No rights to files and no responsibility for code generated
 * by this tool are belonged to author of 'unittestsgen' utility.
 *
 */
package org.geotools.data.vpf.io;

import java.io.IOException;

import junit.framework.TestCase;

import org.geotools.data.vpf.ifc.DataTypesDefinition;
import org.geotools.data.vpf.ifc.FileConstants;

// TODO TableInputStream was deprecated in 2.0.x and has been removed 
// in 2.2.x. This file needs to be updated and tests re-enabled.

/**
 * Test <code>TableColumnDef</code> units tests.
 * 
 * @source $URL$
 */
public class TableColumnDefTest extends TestCase implements DataTypesDefinition, FileConstants {
    /**
     * Instance of tested class.
     */
    protected TableColumnDef varTableColumnDef;

    /**
     * This method is called every time before particular test execution. It creates new instance of tested class and it can perform some more actions
     * which are necessary for performs tests.
     */
    protected void setUp() throws IOException {

        // File file = TestData.file( this, "dnc13/dht" );
        // TableInputStream tis = new TableInputStream( file.getPath() );
        //
        // TableHeader thead = (TableHeader)tis.getHeader();
        // varTableColumnDef = (TableColumnDef)thead.getColumnDefs().get(0);
        // tis.close();
    } // end of setUp()

    /**
     * Method for testing original source method: java.lang.String getColDesc() from tested class
     */
    public void XtestGetColDesc() {
        assertEquals("Cheking column description.", "Row id", varTableColumnDef.getColDesc());
    } // end of testGetColDesc()

    /**
     * Method for testing original source method: int getColumnSize() from tested class
     */
    public void XtestGetColumnSize() {
        assertEquals("Cheking column size.", DATA_LONG_INTEGER_LEN,
                varTableColumnDef.getColumnSize());
    } // end of testGetColumnSize()

    /**
     * Method for testing original source method: int getElementsNumber() from tested class
     */
    public void XtestGetElementsNumber() {
        assertEquals("Cheking column size.", 1, varTableColumnDef.getElementsNumber());
    } // end of testGetElementsNumber()

    /**
     * Method for testing original source method: char getKeyType() from tested class
     */
    public void XtestGetKeyType() {
        assertEquals("Cheking key type.", KEY_PRIMARY, varTableColumnDef.getKeyType());
    } // end of testGetKeyType()

    /**
     * Method for testing original source method: java.lang.String getName() from tested class
     */
    public void XtestGetName() {
        assertEquals("Cheking column name.", "id", varTableColumnDef.getName());
    } // end of testGetName()

    /**
     * Method for testing original source method: java.lang.String getNarrTable() from tested class
     */
    public void XtestGetNarrTable() {
        assertNull("Cheking narrative table name.", varTableColumnDef.getNarrTable());
    } // end of testGetNarrTable()

    /**
     * Method for testing original source method: java.lang.String getThematicIdx() from tested class
     */
    public void XtestGetThematicIdx() {
        assertNull("Cheking column name.", varTableColumnDef.getThematicIdx());
    } // end of testGetThematicIdx()

    /**
     * Method for testing original source method: char getType() from tested class
     */
    public void XtestGetType() {
        assertEquals("Cheking column type.", DATA_LONG_INTEGER, varTableColumnDef.getType());
    } // end of testGetType()

    /**
     * Method for testing original source method: java.lang.String getValDescTableName() from tested class
     */
    public void XtestGetValDescTableName() {
        assertNull("Cheking description table name.", varTableColumnDef.getValDescTableName());
    } // end of testGetValDescTableName()

    /**
     * Method for testing original source method: boolean isNumeric() from tested class
     */
    public void XtestIsNumeric() {
        assertTrue("Checking if it is numeric column.", varTableColumnDef.isNumeric());
    } // end of testIsNumeric()

    public void testNull() {
        // TODO delete this when this file has been updated - prevents maven from throwing an exception
    }

} // end of TableColumnDefTest
