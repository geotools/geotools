/*
 *    GeoTools - The Open Source Java GIS Toolkit
 *    http://geotools.org
 *
 *    (C) 2003-2008, Open Source Geospatial Foundation (OSGeo)
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
/*
 * File is generated by 'Unit Tests Generator' developed under
 * 'Web Test Tools' project at http://sf.net/projects/wttools/
 * Copyright (C) 2001 "Artur Hefczyc" <kobit@users.sourceforge.net>
 * to all 'Web Test Tools' subprojects.
 *
 * No rights to files and no responsibility for code generated
 * by this tool are belonged to author of 'unittestsgen' utility.
 *
 */
package org.geotools.data.vpf.io;

import java.util.Calendar;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

/**
 * Test VPF Date handling
 *
 * @source $URL$
 */
public class VPFDateTest {
    /** Instance of tested class. */
    protected VPFDate varVPFDate;

    protected String date = "20030129161055.00000";

    /**
     * This method is called every time before particular test execution. It creates new instance of
     * tested class and it can perform some more actions which are necessary for performs tests.
     */
    @Before
    public void setUp() {
        byte[] bytes = new byte[date.length()];
        for (int i = 0; i < bytes.length; i++) {
            bytes[i] = (byte) date.charAt(i);
        } // end of for (int i = 0; i < bytes.length; i++)
        varVPFDate = new VPFDate(bytes);
    }

    /** Method for testing original source method: java.util.Date getDate() from tested class */
    @Test
    public void testGetDate() {
        Assert.assertNotNull(
                "Check if it is possible to parse date, corretness is "
                        + "checked in getCalendar method",
                varVPFDate.getDate());
    } // end of testGetDate()

    @Test
    public void testGetCalendar() {
        Calendar cal = varVPFDate.getCalendar();
        Assert.assertEquals("Checking year", 2003, cal.get(Calendar.YEAR));
        Assert.assertEquals(
                "Checking month (Calendar numvers months from 0)", 1, cal.get(Calendar.MONTH) + 1);
        Assert.assertEquals("Checking day of month", 29, cal.get(Calendar.DAY_OF_MONTH));
        Assert.assertEquals("Checking hour", 16, cal.get(Calendar.HOUR_OF_DAY));
        Assert.assertEquals("Checking minute", 10, cal.get(Calendar.MINUTE));
        Assert.assertEquals("Checking second", 55, cal.get(Calendar.SECOND));
        Assert.assertEquals("Checking zone", 0, cal.get(Calendar.ZONE_OFFSET));
    }

    /** Method for testing original source method: java.lang.String toString() from tested class */
    @Test
    public void testToString() {
        Assert.assertEquals("Conversion to string", varVPFDate.toString(), date);
    } // end of testToString()
} // end of VPFDateTest
